[{"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/index.js":"1","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/App.js":"2","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/Header.js":"3","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/About.js":"4","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/Services.js":"5","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/Portfolio.js":"6","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/Footer.js":"7","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/Booking.js":"8","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/Contact.js":"9","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/Login.js":"10","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/Appointments.js":"11","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/AppointmentItem.js":"12","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/AppointmentEdit.js":"13","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/utilities/validation.js":"14"},{"size":1268,"mtime":1608445746917,"results":"15","hashOfConfig":"16"},{"size":482,"mtime":1607543987659,"results":"17","hashOfConfig":"16"},{"size":1583,"mtime":1608445746914,"results":"18","hashOfConfig":"16"},{"size":1590,"mtime":1608445746914,"results":"19","hashOfConfig":"16"},{"size":3302,"mtime":1608445746916,"results":"20","hashOfConfig":"16"},{"size":768,"mtime":1608445746915,"results":"21","hashOfConfig":"16"},{"size":1267,"mtime":1608445746914,"results":"22","hashOfConfig":"16"},{"size":7661,"mtime":1608445746919,"results":"23","hashOfConfig":"16"},{"size":1609,"mtime":1608445746919,"results":"24","hashOfConfig":"16"},{"size":3205,"mtime":1608445746920,"results":"25","hashOfConfig":"16"},{"size":5439,"mtime":1608445746918,"results":"26","hashOfConfig":"16"},{"size":4619,"mtime":1608445746917,"results":"27","hashOfConfig":"16"},{"size":9558,"mtime":1608445746917,"results":"28","hashOfConfig":"16"},{"size":2765,"mtime":1608445746916,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sk54e4",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/index.js",[],"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/App.js",[],["62","63"],"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/Header.js",[],"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/About.js",[],"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/Services.js",[],"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/Portfolio.js",[],"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/Footer.js",[],"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/Booking.js",[],"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/Contact.js",[],"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/Login.js",[],"/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/Appointments.js",["64","65","66","67"],"// import { appointment } from '../../../server/prismaClient';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nfunction Appointments () {\n    const [ appointments, setAppointments] = useState(null);\n    const [ filtered, setFiltered ] = useState(null);\n\n    useEffect(() => {\n        axios.get(`http://localhost:5000/customers`)\n            .then((response) => {\n                // console.log(response.data);\n                setAppointments(response.data);\n                // console.log(appointments);\n                setFiltered(response.data);\n            })\n            .catch(error => console.log(error));    \n    },[]);\n\n    const confirmation = (confirm) => {\n        if (confirm === null) {\n            return \"Have not confirmed yet!\"\n        } else if (confirm) {\n            return \"Confirmed!\"\n        } else if (!confirm) {\n            return \"Denied!\"\n        }\n    }\n\n    const filterResult = (event) => {\n        const select = event.target.value;\n        if (!appointments) {\n            console.log(\"loading ...\");\n        } else {\n            console.log(select);\n            if (select === \"notConfirm\") {\n                setFiltered(appointments.filter((item) => {\n                    if(item.confirm === null) {\n                        return item;\n                    }\n               }))\n               console.log(filtered);\n\n            } else if (select === \"confirmed\") {\n                setFiltered(appointments.filter((item) => {\n                    if(item.confirm === true) {\n                        return item;\n                    }\n               }))\n               console.log(filtered);\n\n            } else if (select === \"denied\") {\n                setFiltered(appointments.filter((item) => {\n                    if(item.confirm === false) {\n                        return item;\n                    }\n               }))\n               console.log(filtered);\n\n            } else if (select === \"today\") {\n                const today = new Date().toLocaleDateString();\n                // console.log(today);\n                // console.log(appointments.datetime)\n                 setFiltered(appointments.filter((item) => {\n                     if(new Date(item.datetime).toLocaleDateString() === today) {\n                    // if(date.datetime > today && date < Date(today.getFullYear, today.getMonth, today.getDate+1)) {\n                            return item;\n                    }\n                }))\n                console.log(filtered);\n            } else {\n                setFiltered(appointments);\n            }\n        }\n    }\n\n    return ( \n        <section className=\"appointments\">\n            <h1 className=\"appointments__title\">Appointments</h1>\n            <label>Filter :</label>\n            <select onChange={ filterResult } name=\"filter\" className=\"appointments__filter\">\n                <option value=\"all\">All</option>\n                <option value=\"notConfirm\">Not Confirm</option>\n                <option value=\"confirmed\">Confirmed</option>\n                <option value=\"denied\">Denied</option>\n                <option value=\"today\">Today</option>\n            </select>\n            <ul className=\"appointments__list\">\n            {filtered && filtered.map((appointment) => (\n                    <li  key={appointment.id} className=\"appointments__item\">\n                        <div className=\"appointments__box\">\n                            <h2 className=\"appointments__label\">Name</h2>\n                            <p className=\"appointments__text\">{appointment.User.first_name} {appointment.User.last_name}</p>\n                        </div>\n                        <div className=\"appointments__box\">\n                            <h2 className=\"appointments__label\">Event Date</h2>\n                            <p className=\"appointments__text\">{new Date(appointment.datetime).toLocaleDateString()}</p>\n                        </div>\n                        <div className=\"appointments__box\">\n                            <h2 className=\"appointments__label\">Event Time</h2>\n                            <p className=\"appointments__text\">{new Date(appointment.datetime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</p>\n                        </div>\n                        <div className=\"appointments__box\">\n                            <h2 className=\"appointments__label\">Location</h2>\n                            <p className=\"appointments__text\">{appointment.User.city}</p>\n                        </div>\n                        <div className=\"appointments__box\">\n                            <h2 className=\"appointments__label\">Type of Event</h2>\n                            <p className=\"appointments__text\">{appointment.Event.type_of_event}</p>\n                        </div>\n                        <div className=\"appointments__box\">\n                            <h2 className=\"appointments__label\">Status</h2>\n                            <p className=\"appointments__text\">{confirmation(appointment.confirm)}</p>\n                        </div>\n                        <div className=\"appointments__btn-box\">\n                            <Link className=\"appointments__btn\" to={`/appointments/${appointment.id}`} >More Details</Link>\n                        </div>\n                    </li>\n                ))} \n            </ul>\n        </section>\n    )\n}\n\nexport default Appointments;","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/AppointmentItem.js",["68","69","70"],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\n\nimport arrow from '../assets/icons/arrow_back-24px.svg';\n\nfunction AppointmentItem ({routerprops}) {\n    const [ detail, setDetail] = useState(null);\n    let history = useHistory();\n    \n    useEffect(() => {\n        // console.log(routerprops);\n        axios.get(`http://localhost:5000/customers/${routerprops.match.params.id}`)\n            .then((response) => {\n                // console.log(response.data.Image[0].fileName);\n                setDetail(response.data);\n                // console.log(detail);\n                // console.log(detail.Image.filename);\n            })\n            .catch(error => console.log(error));  \n    },[]);\n\n    const confirmation = (confirm) => {\n        if (confirm === null) {\n            return \"Have not confirmed yet!\"\n        } else if (confirm) {\n            return \"Confirmed!\"\n        } else if (!confirm) {\n            return \"Denied!\"\n        }\n    }\n\n    const checkMessage = (mes) => {\n        if (mes === null) {\n            return \"-- No message --\"\n        } else {\n            return mes;\n        }\n    }\n\n    return (!detail) ? <h1>Loading ...</h1> : \n    (\n        <section>\n            <div className=\"item__header\">\n                {/* <Link to=\"/appointments\" className=\"item__link\">\n                    <img src={arrow} alt=\"arrow back\" className=\"item__arrow\" />\n                </Link> */}\n                <a className=\"item__link\" type=\"button\" onClick={() => history.goBack()}>\n                    <img src={arrow} alt=\"arrow back\" className=\"item__arrow\" />\n                </a>\n                <h1 className=\"item__title\">Appointment Details</h1>\n            </div>\n            <div className=\"item__container\">\n                <div className=\"item__subcontainer\">\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Name</h2>\n                        <p className=\"item__text\">{detail.User.first_name} {detail.User.last_name}</p>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Event Date</h2>\n                        <p className=\"item__text\">{new Date(detail.datetime).toLocaleDateString()}</p>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Event Time</h2>\n                        <p className=\"item__text\">{new Date(detail.datetime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</p>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Location</h2>\n                        <p className=\"item__text\">{detail.User.street_address}  {detail.User.city}  {detail.User.postal_code}</p>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Phone Number</h2>\n                        <p className=\"item__text\">{detail.User.phone}</p>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Email</h2>\n                        <p className=\"item__text\">{detail.User.email}</p>\n                    </div>\n                </div>\n                <div className=\"item__subcontainer\">\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Type of Event</h2>\n                        <p className=\"item__text\">{detail.Event.type_of_event}</p>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Image</h2>\n                        <img className=\"item__image\" src={`http://localhost:5000/image/${detail.Image[0].fileName}`} />\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Messages</h2>\n                        <p className=\"item__text\">{checkMessage (detail.message)}</p>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Status</h2>\n                        <p className=\"item__text\">{confirmation(detail.confirm)}</p>\n                    </div>\n                </div>\n                <div className=\"item__btn-box\">\n                    <Link className=\"item__btn\" to={`/appointments/${detail.id}/edit`} >Edit</Link>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default AppointmentItem;","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/pages/AppointmentEdit.js",["71","72","73"],"import axios from \"axios\";\nimport swal from 'sweetalert';\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nimport { phoneValidation, emailValidation, validateSubmit } from '../components/utilities/validation';\nimport arrow from '../assets/icons/arrow_back-24px.svg';\n\nfunction AppointmentEdit ({ routerprops }) {\n    const [ detail, setDetail] = useState(null);\n    let history = useHistory();\n    \n    useEffect(() => {\n        // console.log(routerprops);\n        axios.get(`http://localhost:5000/customers/${routerprops.match.params.id}`)\n            .then((response) => {\n                console.log(response.data.Image[0].fileName);\n                setDetail(response.data);\n                console.log(detail);\n                // console.log(detail.Image.filename);\n            })\n            .catch(error => console.log(error));  \n    },[]);\n\n    const confirmation = (confirm) => {\n        if (confirm === null) {\n            return \"Not confirmed yet!\"\n        } else if (confirm) {\n            return \"Confirmed!\"\n        } else if (!confirm) {\n            return \"Denied!\"\n        }\n    }\n\n    const showDateTime = (datetime) => {\n        const newDateTime = datetime.slice(0,16);\n        return newDateTime;\n    }\n\n    const updateAppointment = (event) => {\n        event.preventDefault();\n\n        const form = event.target;\n        if (validateSubmit(form) && phoneValidation(form) && emailValidation(form)) {\n            let eventId;\n            if(form.event.value===\"Wedding\") {\n                eventId=\"2\";\n            }else if(form.event.value===\"Special Occasion\") {\n                eventId=\"1\";\n            }else if (form.event.value===\"Photo Shoot\") {\n                eventId=\"3\";\n            }\n\n            axios.put(`http://localhost:5000/customers/${routerprops.match.params.id}`, {\n                firstName: form.firstName.value,\n                lastName: form.lastName.value,\n                streetAddress: form.streetAddress.value,\n                city: form.city.value,\n                postalCode: form.postalCode.value,\n                phone: form.phone.value,\n                email: form.email.value,\n                datetime: new Date(form.datetime.value),\n                message: form.message.value,\n                eventId: eventId,\n                confirm: form.confirm.value\n            })\n            .then((_response) => {\n                swal(\"Updated!\", \"The information has been updated.\", \"success\");\n                // alert(\"Please give us up to 24 hours to reply.\")\n            }).catch((error) => {\n                console.log(error);\n            });\n        }\n    }\n\n    return (!detail) ? <h1>Loading ...</h1> : \n    (\n        <section>\n            <div className=\"item__header\">\n                {/* <Link to=\"/appointments\" className=\"item__link\"> */}\n                    {/* <img src={arrow} alt=\"arrow back\" className=\"item__arrow\" /> */}\n                {/* </Link> */}\n                <a className=\"item__link\" type=\"button\" onClick={() => history.goBack()}>\n                    <img src={arrow} alt=\"arrow back\" className=\"item__arrow\" />\n                </a>\n                <h1 className=\"item__title\">Edit Appointment Details</h1>\n            </div>\n            <form className=\"item__container\" onSubmit={ updateAppointment }>\n                <div className=\"item__subcontainer\">\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">First Name</h2>\n                        <div className=\"item__input-box\" data-error=\"This field is required\">\n                            <input className=\"item__input\" type=\"text\" name=\"firstName\" defaultValue= {detail.User.first_name} />\n                            {/* <p className=\"item__text\">{detail.User.first_name} {detail.User.last_name}</p> */}\n                        </div>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Last Name</h2>\n                        <div className=\"item__input-box\" data-error=\"This field is required\">\n                            <input className=\"item__input\" type=\"text\" name=\"lastName\" defaultValue= {detail.User.last_name} />\n                            {/* <p className=\"item__text\">{detail.User.first_name} {detail.User.last_name}</p> */}\n                        </div>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Event Date &amp; Time</h2>\n                        <div className=\"item__input-box\" data-error=\"This field is required\">\n                            <input className=\"item__input\" type=\"datetime-local\" name=\"datetime\" defaultValue={showDateTime(detail.datetime)} />\n                            {/* <p>{detail.datetime}</p> */}\n                        </div>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Location</h2>\n                        <div className=\"item__input-box\" data-error=\"This field is required\">\n                            <input className=\"item__input\" type=\"text\" name=\"streetAddress\" defaultValue= {detail.User.street_address} />\n                        </div>\n                        <div className=\"item__input-box\" data-error=\"This field is required\">\n                            <input className=\"item__input\" type=\"text\" name=\"city\" defaultValue= {detail.User.city} />\n                        </div>\n                        <div className=\"item__input-box\" data-error=\"This field is required\">\n                            <input className=\"item__input\" type=\"text\" name=\"postalCode\" defaultValue= {detail.User.postal_code} />\n                            {/* <p className=\"item__text\">{detail.User.street_address}  {detail.User.city}  {detail.User.postal_code}</p> */}\n                        </div>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Phone Number</h2>\n                        <div className=\"item__input-box\" phone-format=\"Please enter 10 digits of phone number\" data-error=\"This field is required\">\n                            <input className=\"item__input\" type=\"text\" name=\"phone\" defaultValue= {detail.User.phone} />\n                            {/* <p className=\"item__text\">{detail.User.phone}</p> */}\n                        </div>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Email</h2>\n                        <div className=\"item__input-box\" email-format=\"Please enter a valid email\" data-error=\"This field is required\">\n                            <input className=\"item__input\" type=\"text\" name=\"email\" defaultValue= {detail.User.email} />\n                            {/* <p className=\"item__text\">{detail.User.email}</p> */}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"item__subcontainer\">\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Type of Event</h2>\n                        <div className=\"item__input-box\" data-error=\"This field is required\">\n                            <select name=\"event\" className=\"item__input\">\n                                <option value={detail.Event.type_of_event} defaultValue>{detail.Event.type_of_event}</option>\n                                <option value=\"Wedding\">Wedding</option>\n                                <option value=\"Photo Shoot\">Photo Shoot</option>\n                                <option value=\"Special Occasion\">Special Occasion</option>\n                            </select>\n                            {/* <p className=\"item__text\">{detail.Event.type_of_event}</p> */}\n                        </div>\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Image</h2>\n                        <img className=\"item__image\" src={`http://localhost:5000/image/${detail.Image[0].fileName}`} />\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Messages</h2>\n                        <textarea className=\"item__input item__input--textarea\" defaultValue={detail.message} name=\"message\"></textarea>\n                        {/* <p className=\"item__text\">{checkMessage (detail.message)}</p> */}\n                    </div>\n                    <div className=\"item__box\">\n                        <h2 className=\"item__label\">Status</h2>\n                        <select name=\"confirm\" className=\"item__input\">\n                            <option value={detail.confirm} defaultValue>{confirmation(detail.confirm)}</option>\n                            <option value=\"true\">Confirmed</option>\n                            <option value=\"null\">Not confirm yet</option>\n                            <option value=\"false\">Denied</option>\n                        </select>\n                        {/* <p className=\"item__text\">{confirmation(detail.confirm)}</p> */}\n                    </div>\n                </div>\n                <div className=\"item__btn-box\">\n                    <input className=\"item__submit\" type=\"submit\" value=\"Save\" />\n                    {/* <Link className=\"item__btn\" to={`/appointments/${detail.id}/edit`} >Edit</Link> */}\n                </div>\n            </form>\n        </section>\n    )\n}\n\nexport default AppointmentEdit;","/Users/patt/Desktop/BrainStation/Projects/Ava Makeup/client/src/components/utilities/validation.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":38,"column":56,"nodeType":"80","messageId":"81","endLine":38,"endColumn":58},{"ruleId":"78","severity":1,"message":"79","line":46,"column":56,"nodeType":"80","messageId":"81","endLine":46,"endColumn":58},{"ruleId":"78","severity":1,"message":"79","line":54,"column":56,"nodeType":"80","messageId":"81","endLine":54,"endColumn":58},{"ruleId":"78","severity":1,"message":"79","line":65,"column":57,"nodeType":"80","messageId":"81","endLine":65,"endColumn":59},{"ruleId":"82","severity":1,"message":"83","line":21,"column":7,"nodeType":"84","endLine":21,"endColumn":9,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":48,"column":17,"nodeType":"88","endLine":48,"endColumn":90},{"ruleId":"89","severity":1,"message":"90","line":87,"column":25,"nodeType":"88","endLine":87,"endColumn":120},{"ruleId":"82","severity":1,"message":"91","line":23,"column":7,"nodeType":"84","endLine":23,"endColumn":9,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"87","line":83,"column":17,"nodeType":"88","endLine":83,"endColumn":90},{"ruleId":"89","severity":1,"message":"90","line":154,"column":25,"nodeType":"88","endLine":154,"endColumn":120},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'routerprops.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["95"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'detail' and 'routerprops.match.params.id'. Either include them or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [routerprops.match.params.id]",{"range":"101","text":"102"},"Update the dependencies array to be: [detail, routerprops.match.params.id]",{"range":"103","text":"104"},[764,766],"[routerprops.match.params.id]",[888,890],"[detail, routerprops.match.params.id]"]